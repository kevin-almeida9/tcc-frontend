{"version":3,"sources":["assets/Icons.tsx","utils/index.ts","views/Bed/mock.ts","views/Bed/consumer/bed.ts","views/POP/mocks.ts","views/POP/consumer/pop.ts","views/Protocol/mocks.ts","views/Protocol/consumer/protocol.ts","views/FMEA/FailModeForm.tsx","views/Bed/BedCard.tsx","views/Bed/BedsList.tsx","views/FMEA/mocks.ts","views/FMEA/RPNModal.tsx","views/FMEA/FailModeList.tsx","views/Dashboard/Dashboard.tsx","components/RichText/RichText.tsx","views/POP/POPForm.tsx","views/POP/POPList.tsx","views/Protocol/ProtocolForm.tsx","views/Protocol/ProtocolList.tsx","routes/routes.tsx","components/Sidebar/Sidebar.tsx","layouts/Auth.tsx","views/SignIn/SignIn.tsx","routes/index.tsx","store/index.ts","App.tsx","index.tsx"],"names":["BedSvg","width","height","viewBox","fill","xmlns","d","WarningSvg","DangerSvg","WarningIcon","props","Icon","component","DangerIcon","getColorStatus","status","bedsMock","id","name","level","ambient","classification","warnings","failures","bed","list","getById","find","search","filter","toLowerCase","includes","resouce","map","label","value","popList","title","describe","createAt","image","pop","process","protocolsList","protocol","protocolList","propocol","FailModeForm","open","onClose","formRef","useRef","useState","isLoading","beds","setBeds","pops","setPops","protocols","setProtopols","useEffect","current","setFieldsValue","useLayoutEffect","response","bedConsumer","err","console","log","getBeds","processConsumer","getProcess","protocolConsumer","getProtocols","visible","onCancel","resetFields","onOk","submit","okText","cancelText","okButtonProps","loading","centered","ref","onFinish","layout","gutter","lg","md","sm","xs","Item","placeholder","TextArea","rows","Option","options","HeaderCard","openModal","setOpenModal","menu","onClick","className","style","background","Title","overlay","trigger","MoreOutlined","CardBed","patient","specialty","length","item","idx","BedsList","bedsList","setBedsList","setIsLoading","setTimeout","marginBottom","span","Search","onSearch","grid","column","pagination","pageSize","responsive","dataSource","renderItem","failModes","RPN","RPNModal","failMode","Modal","error","content","formatter","destroyOnClose","Paragraph","ellipsis","expandable","symbol","help","max","min","tipFormatter","marks","1","2","3","4","5","6","7","8","9","10","FailModeList","useHistory","openModalRPN","setOpenModalRPN","selectedFailMode","setSelectedFailMode","marginLeft","type","shape","icon","PlusCircleOutlined","rpn","bordered","hoverable","description","color","Boolean","tooltip","Dashboard","RichText","onEditorChange","editorRef","apiKey","onInit","evt","editor","init","menubar","plugins","toolbar","content_style","popForm","history","useParams","errors","onSubmit","values","a","ArrowLeftOutlined","push","validateStatus","html","getContent","format","describeHTML","List","fields","add","remove","field","noStyle","CloseCircleOutlined","fieldKey","htmlType","POPList","selectedProcess","setSelectedProcess","processList","setprocessList","popConsumer","cover","src","alt","ProtocolForm","ProtocolsList","selectedProtocol","setSelectedProtocol","setProtocolList","dashboard","path","Home","AppstoreOutlined","FileProtectOutlined","protocolForm","hidden","routes","FileTextOutlined","POPForm","DotChartOutlined","Sidebar","collapsed","onCollapse","innerWidth","isMobile","setISMobile","handleResize","window","addEventListener","removeEventListener","collapsible","breakpoint","collapsedWidth","undefined","MenuOutlined","theme","mode","inlineCollapsed","defaultSelectedKeys","route","Auth","children","setCollapsed","e","preventDefault","stopPropagation","SignIn","to","Routes","exact","store","configureStore","reducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGMA,EAAS,kBACb,qBAAKC,MAAM,SAASC,OAAO,SAASC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,6BAAlF,SACE,sBAAMC,EAAE,kkBAINC,EAAa,kBACjB,qBAAKN,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,6BAA5E,SACE,sBAAMC,EAAE,8FAINE,EAAY,kBAChB,sBAAKP,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,6BAA5E,UACE,sBAAMC,EAAE,2HACR,sBAAMA,EAAE,4HACR,sBAAMA,EAAE,0BAMCG,EAAc,SAACC,GAAD,OAAgB,cAACC,EAAA,EAAD,aAAMC,UAAWL,GAAgBG,KAC/DG,EAAa,SAACH,GAAD,OAAgB,cAACC,EAAA,EAAD,aAAMC,UAAWJ,GAAeE,K,8ECxB7DI,EAAiB,SAACC,GAC7B,OAAQA,GACN,IAAK,QAAW,MAAO,gEACvB,IAAK,QAAW,MAAO,gEACvB,IAAK,UAAW,MAAO,gEACvB,IAAK,SAAW,MAAO,gEACvB,IAAK,UAAW,MAAO,gEACvB,QAAgB,MAAO,U,oCCqGZC,EA5GU,CACvB,CACEC,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,UACRK,QAAS,SACTC,eAAgB,WAChBC,SAAS,CACP,sBACA,6CAGJ,CACEL,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,SACRK,QAAS,SACTC,eAAgB,WAChBE,SAAS,CACP,wBACA,yCACA,gCAGJ,CACEN,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,UACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,IACJC,KAAM,UACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,KACJC,KAAM,WACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,KACJC,KAAM,WACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,YAElB,CACEJ,GAAI,KACJC,KAAM,WACNC,MAAO,KACPJ,OAAQ,QACRK,QAAS,SACTC,eAAgB,aCvFLG,EAfH,CACVC,KAAM,WACJ,OAAOT,GAETU,QAAS,SAACT,GACR,OAAOD,EAASW,MAAK,SAAAH,GAAG,OAAIA,EAAIP,IAAMA,MAExCW,OAAQ,SAACA,GACP,OAAOZ,EAASa,QAAO,SAAAL,GAAG,OAAIA,EAAIN,KAAKY,cAAcC,SAASH,EAAOE,mBAEvEE,QAAS,WACP,OAAOhB,EAASiB,KAAI,SAAAT,GAAG,MAAI,CAACU,MAAOV,EAAIN,KAAMiB,MAAOX,EAAIP,SC0D7CmB,EAzEC,CACd,CACEnB,GAAI,IACJoB,MAAO,mCACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,IACJoB,MAAO,0CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,2EACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,IACJoB,MAAO,oEACPC,SAAU,+CACVC,SAAU,GACVC,MAAO,8EAET,CACEvB,GAAI,IACJoB,MAAO,sBACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,6BACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,8EAET,CACEvB,GAAI,IACJoB,MAAO,oBACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,2CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,KACJoB,MAAO,uCACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEClDIC,EAfH,CACVhB,KAAM,WACJ,OAAOW,GAETV,QAAS,SAACT,GACR,OAAOmB,EAAQT,MAAK,SAAAe,GAAO,OAAIA,EAAQzB,IAAMA,MAE/CW,OAAQ,SAACA,GACP,OAAOQ,EAAQP,QAAO,SAAAa,GAAO,OAAIA,EAAQL,MAAMP,cAAcC,SAASH,EAAOE,mBAE/EE,QAAS,WACP,OAAOI,EAAQH,KAAI,SAAAS,GAAO,MAAI,CAACR,MAAOQ,EAAQL,MAAOF,MAAOO,EAAQzB,SC0DzD0B,EAzEO,CACpB,CACE1B,GAAI,IACJoB,MAAO,mCACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,IACJoB,MAAO,0CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,oDACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,IACJoB,MAAO,oEACPC,SAAU,+CACVC,SAAU,GACVC,MAAO,8EAET,CACEvB,GAAI,IACJoB,MAAO,sBACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,6BACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,8EAET,CACEvB,GAAI,IACJoB,MAAO,oBACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,2CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEAET,CACEvB,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,uEAET,CACEvB,GAAI,KACJoB,MAAO,uCACPC,SAAU,0JACVC,SAAU,GACVC,MAAO,wEClDII,EAfE,CACfnB,KAAM,WACJ,OAAOoB,GAETnB,QAAS,SAACT,GACR,OAAO4B,EAAalB,MAAK,SAAAmB,GAAQ,OAAIA,EAAS7B,IAAMA,MAEtDW,OAAQ,SAACA,GACP,OAAOiB,EAAahB,QAAO,SAAAiB,GAAQ,OAAIA,EAAST,MAAMP,cAAcC,SAASH,EAAOE,mBAEtFE,QAAS,WACP,OAAOa,EAAaZ,KAAI,SAAAa,GAAQ,MAAI,CAACZ,MAAOY,EAAST,MAAOF,MAAOW,EAAS7B,SCoIjE8B,MA3If,YAAoF,IAA7DC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,QAASzB,EAA6C,EAA7CA,IAAKkB,EAAwC,EAAxCA,QAASE,EAA+B,EAA/BA,SAC5CM,EAAUC,iBAA0B,MADuC,EAE/CC,oBAAS,GAFsC,mBAE1EC,EAF0E,aAGzDD,mBAAsB,KAHmC,mBAG1EE,EAH0E,KAGpEC,EAHoE,OAIzDH,mBAAsB,IAJmC,mBAI1EI,EAJ0E,KAIpEC,EAJoE,OAK/CL,mBAAsB,IALyB,mBAK1EM,EAL0E,KAK/DC,EAL+D,KAsDjF,OA3CAC,qBAAU,WACC,IAAD,EAALZ,IACA,UAAAE,EAAQW,eAAR,SAAiBC,eAAe,CAC/BtC,MACAkB,UACAE,gBAGH,CAACI,EAAMxB,EAAKkB,EAASE,IAExBmB,2BAAgB,YACE,WACd,IACE,IAAMC,EAAWC,EAAYjC,UACzBgC,GAAUT,EAAQS,GACtB,MAAOE,GACPC,QAAQC,IAAIF,IAsBhBG,GAlBmB,WACjB,IACE,IAAML,EAAWM,EAAgBtC,UAC7BgC,GAAUP,EAAQO,GACtB,MAAOE,GACPC,QAAQC,IAAIF,IAchBK,GAVqB,WACnB,IACE,IAAMP,EAAWQ,EAAiBxC,UAC9BgC,GAAUL,EAAaK,GAC3B,MAAOE,GACPC,QAAQC,IAAIF,IAMhBO,KACC,IAGD,cAAC,IAAD,CACEpC,MAAM,gBACNqC,QAAS1B,EACT2B,SAAU,WAAO,IAAD,EACd,UAAAzB,EAAQW,eAAR,SAAiBe,cACjB3B,KAEF4B,KAAM,WAAO,IAAD,EAAC,UAAA3B,EAAQW,eAAR,SAAiBiB,UAC9BC,OAAO,SACPC,WAAW,WACXC,cAAe,CACbC,QAAQ7B,GAEVpD,MAAO,IACPkF,UAAQ,EAdV,SAgBE,cAAC,IAAD,CACEC,IAAKlC,EACLmC,SAlEW,aAmEXC,OAAO,WAHT,SAKE,eAAC,IAAD,CAAKC,OAAQ,CAACC,GAAG,GAAIC,GAAG,GAAIC,GAAG,EAAGC,GAAG,GAArC,UACE,eAAC,IAAD,CAAKH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACE,cAAC,IAAKC,KAAN,CACE1E,KAAK,QACLgB,MAAM,SAFR,SAIE,cAAC,IAAD,CAAO2D,YAAY,uBAGrB,cAAC,IAAKD,KAAN,CACE1E,KAAK,WACLgB,MAAM,kBAFR,SAIE,cAAC,IAAM4D,SAAP,CAAiBC,KAAMvE,EAAM,EAAI,EAAGqE,YAAY,wCAGpD,eAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UAEInE,GACA,cAAC,IAAKoE,KAAN,CACE1E,KAAK,SACLgB,MAAM,SAFR,SAIE,eAAC,IAAD,CAAQ2D,YAAY,sBAApB,UACE,cAAC,IAAOG,OAAR,CAAe7D,MAAM,UAArB,4BACA,cAAC,IAAO6D,OAAR,CAAe7D,MAAM,SAArB,oCAIN,cAAC,IAAKyD,KAAN,CACE1E,KAAK,WACLgB,MAAM,YAFR,SAIE,cAAC,IAAD,CACE2D,YAAY,yBACZI,QAASvC,MAGb,cAAC,IAAKkC,KAAN,CACE1E,KAAK,UACLgB,MAAM,MAFR,SAIE,cAAC,IAAD,CACE2D,YAAY,wBACZI,QAASzC,MAGb,cAAC,IAAKoC,KAAN,CACE1E,KAAK,MACLgB,MAAM,QAFR,SAIE,cAAC,IAAD,CACE2D,YAAY,qBACZI,QAAS3C,iBChIzB,SAAS4C,EAAT,GAA4F,IAAtEhF,EAAqE,EAArEA,KAAMH,EAA+D,EAA/DA,OAAQE,EAAuD,EAAvDA,GAAuD,EACvDmC,oBAAS,GAD8C,mBAClF+C,EADkF,KACvEC,EADuE,KAGnFC,EACJ,cAAC,IAAD,UACE,cAAC,IAAKT,KAAN,CAAmBU,QAAS,WAAKF,GAAa,IAA9C,0BAAe,OAMnB,OACE,sBAAKG,UAAU,kBAAf,UACE,cAAC,EAAD,CACEvD,KAAMmD,EACNlD,QAAS,WACPmD,GAAa,IAEf5E,IAAKP,IAEP,qBAAKuF,MAAO,CAAEC,WAAY3F,EAAeC,MACzC,cAAC,IAAW2F,MAAZ,CAAkBvF,MAAO,EAAzB,SAA6BD,IAC7B,cAAC,IAAD,CAAUqF,UAAU,gBAAgBI,QAASN,EAAMO,QAAS,CAAC,SAA7D,SACE,cAACC,EAAA,EAAD,SAmDOC,MA7Cf,YAA0C,IAAvBtF,EAAsB,EAAtBA,IACTN,EAA6FM,EAA7FN,KAAMH,EAAuFS,EAAvFT,OAAQQ,EAA+EC,EAA/ED,SAAUD,EAAqEE,EAArEF,SAAUyF,EAA2DvF,EAA3DuF,QAAS5F,EAAkDK,EAAlDL,MAAOC,EAA2CI,EAA3CJ,QAASC,EAAkCG,EAAlCH,eAAgB2F,EAAkBxF,EAAlBwF,UAAW/F,EAAOO,EAAPP,GAC9F,OACE,eAAC,IAAD,CAAMsF,UAAS,kBAAa,CAAC,WAAWxE,SAAShB,IAAW,oBAAsBsB,MAAO,cAAC6D,EAAD,CAAYjF,GAAIA,EAAIC,KAAMA,EAAMH,OAAQA,IAAjI,UAEI,CAAC,WAAWgB,SAAShB,KAArB,OAAgCO,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAU2F,SACxC3F,EAASW,KAAI,SAACiF,EAAMC,GAAP,OACX,sBAAKZ,UAAU,uCAAf,UACE,cAAC,EAAD,IACA,4BAAIW,MAFqDC,MAQ/D,CAAC,UAAUpF,SAAShB,KAApB,OAA+BQ,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAU0F,SACvC1F,EAASU,KAAI,SAACiF,EAAMC,GAAP,OACX,sBAAKZ,UAAU,sCAAf,UACE,cAAC,EAAD,IACA,4BAAIW,MAFoDC,MAQ9D,CAAC,SAASpF,SAAShB,IAAWgG,GAC5B,6BAKF,CAAC,QAAS,WAAWhF,SAAShB,IAC5B,sBAAKwF,UAAU,iBAAf,UACE,8BAAG,2CAAuBpF,KAC1B,8BAAG,+CAA2BC,KAC9B,8BAAG,0DAAgCC,KAClC,CAAC,iBAAiBU,SAASV,IAAmB,8BAAG,sDAAkC2F,YCJjFI,MA/Df,WAAqB,IAAD,EACchE,mBAAiB,IAD/B,mBACXiE,EADW,KACDC,EADC,OAEgBlE,oBAAS,GAFzB,mBAEXC,EAFW,KAEAkE,EAFA,KA2BlB,OAbA3D,qBAAU,WARR2D,GAAa,GACGC,YAAW,WACzB,IAAMxD,EAAWC,EAAYxC,OACzBuC,GAAUsD,EAAYtD,GAC1BuD,GAAa,KACZ,OAKF,IAYD,oCACE,cAAC,IAAWb,MAAZ,CAAkBvF,MAAO,EAAzB,oBACA,cAAC,IAAD,CAAKqF,MAAO,CAAEiB,aAAc,UAA5B,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAMC,OAAP,CACE9B,YAAY,YACZ+B,SAhBO,SAACzF,GAChB,IACE,IAAM6B,EAAWC,EAAYrC,OAAOO,GAChC6B,GAAUsD,EAAYtD,GAC1B,MAAOE,GACPC,QAAQC,IAAIF,WAeZ,cAAC,IAAD,CACE2D,KAAM,CACJtC,OAAQ,GACRuC,OAAQ,EACRtC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELoC,WAAY,CACVC,SAAU,EACVC,YAAY,GAEd/C,QAAS7B,EACT6E,WAAYb,EACZc,WAAY,SAACjB,GAAD,OACV,cAAC,IAAKtB,KAAN,UACE,cAAC,EAAD,CAASpE,IAAK0F,a,QC5DbkB,EAAyB,CACpC,CACEnH,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACRE,SAAS,KAEX,CACE3B,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACR2F,IAAI,IAEN,CACEpH,GAAI,IACJoB,MAAO,uDACPC,SAAU,gIACVC,SAAU,GACVG,QAAQ,IACRE,SAAS,IACTyF,IAAI,KAEN,CACEpH,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVK,SAAS,KAEX,CACE3B,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,KAEN,CACEP,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACR2F,IAAI,GAEN,CACEpH,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACRE,SAAS,KAEX,CACE3B,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACRE,SAAS,IACTyF,IAAI,IAEN,CACEpH,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACRE,SAAS,IACTyF,IAAI,IAEN,CACEpH,GAAI,IACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJoB,SAAS,IACTyF,IAAI,GAEN,CACEpH,GAAI,KACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJkB,QAAQ,IACRE,SAAS,IACTyF,IAAI,IAEN,CACEpH,GAAI,KACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJoB,SAAS,IACTyF,IAAI,IAEN,CACEpH,GAAI,KACJoB,MAAO,6CACPC,SAAU,0JACVC,SAAU,GACVf,IAAI,IACJ6G,IAAK,M,mCCoCMC,MA9If,YAA+D,IAA3CtF,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASsF,EAA2B,EAA3BA,SAC3BrF,EAAUC,iBAA0B,MADkB,EAEzBC,oBAAS,GAFgB,mBAErDC,EAFqD,UAQ5DO,qBAAU,YACJ2E,GAAYvF,GACdwF,IAAMC,MAAM,CACVpG,MAAM,iBACNqG,QAAS,kEAGb,CAACH,IAEH,IAAMI,EAAY,SAACxG,GACjB,OAAQA,GACN,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,YACf,KAAK,EAAG,MAAO,cACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,oBACf,KAAK,EAAG,MAAO,WACf,KAAK,EAAG,MAAO,mBACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,aACf,KAAK,GAAI,MAAM,SACf,QAAS,MAAO,KAKpB,OACE,eAAC,IAAD,CACEE,MAAK,OAAEkG,QAAF,IAAEA,OAAF,EAAEA,EAAUlG,MACjBqC,QAAS1B,EACTuD,UAAU,YACV5B,SAAU,WAAO,IAAD,EACd,UAAAzB,EAAQW,eAAR,SAAiBe,cACjB3B,KAEF2F,gBAAc,EACd/D,KAAM,WAAO,IAAD,EAAC,UAAA3B,EAAQW,eAAR,SAAiBiB,UAC9BC,OAAO,SACPC,WAAW,WACXC,cAAe,CACbC,QAAQ7B,GAEV8B,UAAQ,EAfV,UAiBE,cAAC,IAAW0D,UAAZ,CACEC,SAAU,CACR/C,KAAM,EACNgD,YAAY,EACZC,OAAQ,gBAJZ,gBAOGT,QAPH,IAOGA,OAPH,EAOGA,EAAUjG,WAEb,eAAC,IAAD,CACE8C,IAAKlC,EACLmC,SA3DW,aA4DXC,OAAO,WAHT,UAKE,cAAC,IAAKM,KAAN,CACE1E,KAAK,WACLgB,MAAM,wBACN+G,KAAK,gEAHP,SAKE,cAAC,IAAD,CACEC,IAAK,GACLC,IAAK,EACLC,aAAcT,EACdU,MAAO,CACLC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,GAAI,UAIZ,cAAC,IAAD,IACA,cAAC,IAAKnE,KAAN,CACE1E,KAAK,YACLgB,MAAM,iCACN+G,KAAK,gEAHP,SAKE,cAAC,IAAD,CACEC,IAAK,GACLC,IAAK,EACLC,aAAcT,EACdU,MAAO,CACLC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,GAAI,UAIV,cAAC,IAAD,IACA,cAAC,IAAKnE,KAAN,CACI1E,KAAK,YACLgB,MAAM,2CACN+G,KAAK,gEAHT,SAKI,cAAC,IAAD,CACEC,IAAK,GACLC,IAAK,EACLC,aAAcT,EACdU,MAAO,CACLC,EAAG,KACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,GAAI,gBCSHC,MA1If,WACkBC,cAAhB,IADuB,EAEW7G,oBAAS,GAFpB,mBAEhB+C,EAFgB,KAELC,EAFK,OAGiBhD,oBAAS,GAH1B,mBAGhB8G,EAHgB,KAGFC,EAHE,OAIyB/G,qBAJzB,mBAIhBgH,EAJgB,KAIEC,EAJF,KAOjBhE,EACJ,cAAC,IAAD,UACE,cAAC,IAAKT,KAAN,CAAmBU,QAAS,WAAK6D,GAAgB,IAAjD,0BAAe,OAcnB,OACE,oCACE,cAAC,EAAD,CACEnH,KAAMmD,EACNlD,QAAS,WACPmD,GAAa,MAGjB,cAAC,EAAD,CACEpD,KAAMkH,EACNjH,QAAS,WACPkH,GAAgB,IAElB5B,SAAU6B,IAEZ,cAAC,IAAW1D,MAAZ,CAAmBvF,MAAO,EAA1B,4BACA,eAAC,IAAD,CAAKqF,MAAO,CAACiB,aAAa,UAAYlC,OAAQ,CAAC,GAAG,IAAlD,UACE,cAAC,IAAD,CAAMC,GAAI,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAnC,SACG,cAAC,IAAMgC,OAAP,CACC9B,YAAY,gBAGhB,cAAC,IAAD,CAAKL,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIa,MAAO,CAAC8D,WAAW,QAAvD,SACE,cAAC,IAAD,CACE9D,MAAO,CAACvG,MAAM,QACdsK,KAAK,UACLC,MAAM,QACNC,KAAM,cAACC,EAAA,EAAD,IACNpE,QAAS,WACPF,GAAa,IANjB,gCAWJ,cAAC,IAAD,CAAKb,OAAQ,CAAC,GAAG,IAAjB,SAEI6C,EAAUnG,KAAI,SAAAiF,GAAI,gBA5CLyD,EA4CK,OAChB,cAAC,IAAD,CAAmBnF,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA9C,SACG,cAAC,IAAD,CACGY,UAAU,eACVqE,UAAU,EACVC,WAAS,EAHZ,SAKG,cAAC,OAAD,CACExI,MACE,sBAAKkE,UAAU,uBAAf,UACE,mBAAGA,UAAU,sBAAb,SACGW,EAAK7E,QAER,cAAC,IAAD,CAAUkE,UAAU,qBAAqBI,QAASN,EAAMO,QAAS,CAAC,SAAlE,SACE,cAACC,EAAA,EAAD,CAAcP,QAAS,WAAK+D,EAAoBnD,WAItD4D,YACE,qCACE,mBACEvE,UAAU,oBACVC,MAAO,CAACuE,OAlEXJ,EAkE6BzD,EAAKmB,IAjEjDsC,EACDA,EAAM,GAAW,UACjBA,EAAM,IAAMA,GAAO,GAAW,UAC9BA,EAAM,GAAKA,GAAO,GAAW,UACpB,UAJI,YA+DI,SAIGzD,EAAKmB,IAAOnB,EAAKmB,IAAO,MAE3B,uBAAO9B,UAAU,sBAAjB,SACE,kCAEIyE,QAAQ9D,EAAK1F,MACb,qBAAI+E,UAAU,oBAAd,UACE,oBAAIA,UAAU,sBAAd,mBACA,oBAAIA,UAAU,sBAAd,SACE,cAAC,IAAWsC,UAAZ,CAAsBC,SAAU,CAAC/C,KAAK,EAAGkF,QAAO,UAAChH,EAAYvC,QAAQwF,EAAK1F,YAA1B,aAAC,EAA+BN,MAAhF,mBACG+C,EAAYvC,QAAQwF,EAAK1F,YAD5B,aACG,EAA+BN,YAOtC8J,QAAQ9D,EAAKtE,WACb,qBAAI2D,UAAU,oBAAd,UACE,oBAAIA,UAAU,sBAAd,uBACA,oBAAIA,UAAU,sBAAd,SACE,cAAC,IAAWsC,UAAZ,CAAsBC,SAAU,CAAC/C,KAAK,EAAGkF,QAAO,UAACzG,EAAiB9C,QAAQwF,EAAKtE,iBAA/B,aAAC,EAAyCP,OAA1F,mBACGmC,EAAiB9C,QAAQwF,EAAKtE,iBADjC,aACG,EAAyCP,aAOhD2I,QAAQ9D,EAAKxE,UACb,qBAAI6D,UAAU,oBAAd,UACE,oBAAIA,UAAU,sBAAd,iBACA,oBAAIA,UAAU,sBAAd,SACE,cAAC,IAAWsC,UAAZ,CAAsBC,SAAU,CAAC/C,KAAK,EAAGkF,QAAO,UAAC3G,EAAgB5C,QAAQwF,EAAKxE,gBAA9B,aAAC,EAAuCL,OAAxF,mBACGiC,EAAgB5C,QAAQwF,EAAKxE,gBADhC,aACG,EAAuCL,0BAzDtD6E,EAAKjG,aC/DZiK,MARf,WACE,OACE,8BACE,cAAC,IAAWxE,MAAZ,CAAmBvF,MAAO,EAA1B,0B,kDC4BSgK,OA1Bf,YAA+C,IAA5BC,EAA2B,EAA3BA,eACXC,EAAYlI,iBAAY,MAE9B,OACE,cAAC,KAAD,CACEmI,OAAQ5I,mDACR6I,OAAQ,SAACC,EAAKC,GAAN,OAAiBJ,EAAUxH,QAAU4H,GAC7CL,eAAgBA,EAChBM,KAAM,CACJxL,OAAQ,IACRyL,SAAS,EACTC,QAAS,CACP,uEACA,6CACA,mDAEFC,QAAS,2JAITC,cAAe,sE,UCyERC,OA5Ff,WACE,IAAMC,EAAU/B,cACV/G,EAAUC,iBAA2B,MACnClC,EAAwBgL,cAAxBhL,GAHoB,EAKAmC,mBAAoB,IALpB,mBAKrB8I,EALqB,KAOtBC,GAPsB,KAOd,yCAAG,WAAOC,GAAP,UAAAC,EAAA,sDACflI,QAAQC,IAAIgI,GADG,2CAAH,uDAWd,OACE,sBAAK7F,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC+F,GAAA,EAAD,CAAmB/F,UAAU,uBAAuBD,QAAS,kBAAK0F,EAAQO,KAAK,iBAC/E,cAAC,IAAW7F,MAAZ,CAAkBH,UAAU,iBAAiBpF,MAAO,EAApD,SAAwDF,EAAI,aAAc,gBAE5E,eAAC,IAAD,CACEsF,UAAU,gBACVnB,IAAKlC,EACLoC,OAAO,WACPD,SAAU8G,EAJZ,UAME,cAAC,IAAKvG,KAAN,CACE1E,KAAK,QACLgB,MAAM,SACN+G,KAAMiD,EAAO7J,OAAS6J,EAAO7J,MAC7BmK,eAAgBN,EAAO7J,OAAU,QAJnC,SAME,cAAC,IAAD,CAAOwD,YAAY,sBAErB,cAAC,IAAKD,KAAN,CACE1E,KAAK,eACLgB,MAAM,kBACNqE,UAAU,oBACV0C,KAAMiD,EAAO5J,UAAY4J,EAAO5J,SAChCkK,eAAgBN,EAAO5J,UAAa,QALtC,SAOE,cAAC,GAAD,CACE8I,eAnCa,SAACqB,EAAchB,GAA2B,IAAD,EAC9D,UAAAvI,EAAQW,eAAR,SAAiBC,eAAe,CAC9BxB,SAAUmJ,EAAOiB,WAAW,CAACC,OAAS,SACtCC,aAAcH,SAmCZ,sBAAKlG,UAAU,qBAAf,UACE,8CACA,cAAC,IAAKsG,KAAN,CACE3L,KAAK,YADP,SAGG,SAAC4L,EAAD,OAASC,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAd,OACC,gCACGF,EAAO7K,KAAI,SAAAgL,GAAK,OACf,sBAA0B1G,UAAU,gBAApC,UACE,cAAC,IAAKX,KAAN,2BACMqH,GADN,IAEEC,SAAO,EAFT,SAIE,cAAC,IAAD,CACE3G,UAAU,iBACVV,YAAY,qBAGhB,cAACsH,GAAA,EAAD,CAAqB5G,UAAU,kBAAkBD,QAAS,kBAAM0G,EAAOC,EAAM/L,WAVrE+L,EAAMG,aAalB,eAAC,IAAD,CAAQ9G,QAAS,kBAAIyG,KAArB,UACE,cAACrC,EAAA,EAAD,IADF,8BAOR,cAAC,IAAK9E,KAAN,UACE,cAAC,IAAD,CACEW,UAAU,kBACVD,QAAS,kCAAKpD,EAAQW,eAAb,aAAK,EAAiBiB,UAC/ByF,KAAK,UACL8C,SAAS,SAJX,6BCyBKC,OAtGf,WACE,IAAMtB,EAAU/B,cADE,EAEgB7G,oBAAS,GAFzB,mBAEX+C,EAFW,KAEAC,EAFA,OAG4BhD,mBAAS,IAHrC,mBAGXmK,EAHW,KAGMC,EAHN,OAIoBpK,mBAAiB,IAJrC,mBAIXqK,EAJW,KAIEC,EAJF,KAelB9J,qBAAU,YACW,WACjB,IACE,IAAMI,EAAW2J,EAAYlM,OACzBuC,GAAU0J,EAAe1J,GAC7B,MAAOE,GACPC,QAAQC,IAAIF,IAGhBK,KACC,IAIH,IAAM8B,EACJ,cAAC,IAAD,UACE,cAAC,IAAKT,KAAN,CAAmBU,QAAS,WAAKF,GAAa,IAA9C,0BAAe,OAMnB,OACE,oCACG,cAAC,EAAD,CACGpD,KAAMmD,EACNlD,QAAS,WACPmD,GAAa,IAEf1D,QAAS6K,IAEb,cAAC,IAAW7G,MAAZ,CAAmBvF,MAAO,EAA1B,iBACA,eAAC,IAAD,CAAKqF,MAAO,CAACiB,aAAa,UAAYlC,OAAQ,CAAC,GAAG,IAAlD,UACE,cAAC,IAAD,CAAMC,GAAI,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAnC,SACG,cAAC,IAAMgC,OAAP,CACC9B,YAAY,YACZ+B,SA7CO,SAACzF,GAChB,IACE,IAAM6B,EAAW2J,EAAY/L,OAAOO,GAChC6B,GAAU0J,EAAe1J,GAC7B,MAAOE,GACPC,QAAQC,IAAIF,SA2CV,cAAC,IAAD,CAAKsB,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIa,MAAO,CAAC8D,WAAW,QAAvD,SACE,cAAC,IAAD,CACE9D,MAAO,CAACvG,MAAM,QACdsK,KAAK,UACLC,MAAM,QACNC,KAAM,cAACC,EAAA,EAAD,IACNpE,QAAS,WACP0F,EAAQO,KAAK,kBANjB,qCAWJ,cAAC,IAAD,CAAKhH,OAAQ,CAAC,GAAG,IAAjB,SAEIkI,EAAYxL,KAAI,SAAAiF,GAAI,OAClB,cAAC,IAAD,CAAmB1B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA9C,SACG,cAAC,IAAD,CACGa,MAAO,CAAEtG,OAAO,QAChB0N,MAAO,qBAAKpH,MAAO,CAAEtG,OAAO,QAAU2N,IAAK3G,EAAK1E,MAAOsL,IAAK5G,EAAK1E,QACjEoI,UAAU,EACVC,WAAS,EAJZ,SAMG,cAAC,OAAD,CACExI,MACE,sBAAKkE,UAAU,kBAAf,UACE,mBAAGA,UAAU,iBAAb,SACGW,EAAK7E,QAER,cAAC,IAAD,CAAUkE,UAAU,gBAAgBI,QAASN,EAAMO,QAAS,CAAC,SAA7D,SACE,cAACC,EAAA,EAAD,CAAcP,QAAS,WAAKkH,EAAmBtG,EAAKjG,YAI1D6J,YACE,cAAC,IAAWjC,UAAZ,CAAsBC,SAAU,CAAC/C,KAAM,GAAvC,SACGmB,EAAK5E,gBApBR4E,EAAKjG,aCsBZ8M,OA5Ff,WACE,IAAM/B,EAAU/B,cACV/G,EAAUC,iBAAgC,MACxClC,EAAwBgL,cAAxBhL,GAHyB,EAKLmC,mBAAyB,IALpB,mBAK1B8I,EAL0B,KAO3BC,GAP2B,KAOnB,yCAAG,WAAOC,GAAP,UAAAC,EAAA,sDACflI,QAAQC,IAAIgI,GADG,2CAAH,uDAWd,OACE,sBAAK7F,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,cAAC+F,GAAA,EAAD,CAAmB/F,UAAU,4BAA4BD,QAAS,kBAAK0F,EAAQO,KAAK,iBACpF,cAAC,IAAW7F,MAAZ,CAAkBH,UAAU,sBAAsBpF,MAAO,EAAzD,SAA6DF,EAAI,mBAAoB,sBAEvF,eAAC,IAAD,CACEsF,UAAU,qBACVnB,IAAKlC,EACLoC,OAAO,WACPD,SAAU8G,EAJZ,UAME,cAAC,IAAKvG,KAAN,CACE1E,KAAK,QACLgB,MAAM,SACN+G,KAAMiD,EAAO7J,OAAS6J,EAAO7J,MAC7BmK,eAAgBN,EAAO7J,OAAU,QAJnC,SAME,cAAC,IAAD,CAAOwD,YAAY,sBAErB,cAAC,IAAKD,KAAN,CACE1E,KAAK,eACLgB,MAAM,kBACNqE,UAAU,yBACV0C,KAAMiD,EAAO5J,UAAY4J,EAAO5J,SAChCkK,eAAgBN,EAAO5J,UAAa,QALtC,SAOE,cAAC,GAAD,CACE8I,eAnCa,SAACqB,EAAchB,GAA2B,IAAD,EAC9D,UAAAvI,EAAQW,eAAR,SAAiBC,eAAe,CAC9BxB,SAAUmJ,EAAOiB,WAAW,CAACC,OAAS,SACtCC,aAAcH,SAmCZ,sBAAKlG,UAAU,0BAAf,UACE,8CACA,cAAC,IAAKsG,KAAN,CACE3L,KAAK,YADP,SAGG,SAAC4L,EAAD,OAASC,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAd,OACC,gCACGF,EAAO7K,KAAI,SAAAgL,GAAK,OACf,sBAA0B1G,UAAU,qBAApC,UACE,cAAC,IAAKX,KAAN,2BACMqH,GADN,IAEEC,SAAO,EAFT,SAIE,cAAC,IAAD,CACE3G,UAAU,sBACVV,YAAY,qBAGhB,cAACsH,GAAA,EAAD,CAAqB5G,UAAU,uBAAuBD,QAAS,kBAAM0G,EAAOC,EAAM/L,WAV1E+L,EAAMG,aAalB,eAAC,IAAD,CAAQ9G,QAAS,kBAAIyG,KAArB,UACE,cAACrC,EAAA,EAAD,IADF,8BAOR,cAAC,IAAK9E,KAAN,UACE,cAAC,IAAD,CACEW,UAAU,uBACVD,QAAS,kCAAKpD,EAAQW,eAAb,aAAK,EAAiBiB,UAC/ByF,KAAK,UACL8C,SAAS,SAJX,6BCyBKW,OAtGf,WACE,IAAMhC,EAAU/B,cADQ,EAEU7G,oBAAS,GAFnB,mBAEjB+C,EAFiB,KAENC,EAFM,OAGwBhD,mBAAS,IAHjC,mBAGjB6K,EAHiB,KAGCC,EAHD,OAIgB9K,mBAAsB,IAJtC,mBAIjBP,EAJiB,KAIHsL,EAJG,KAexBvK,qBAAU,YACW,WACjB,IACE,IAAMI,EAAWQ,EAAiB/C,OAC9BuC,GAAUmK,EAAgBnK,GAC9B,MAAOE,GACPC,QAAQC,IAAIF,IAGhBK,KACC,IAGH,IAAM8B,EACJ,cAAC,IAAD,UACE,cAAC,IAAKT,KAAN,CAAmBU,QAAS,WAAKF,GAAa,IAA9C,0BAAe,OAMnB,OACE,oCACE,cAAC,EAAD,CACEpD,KAAMmD,EACNlD,QAAS,WACPmD,GAAa,IAEfxD,SAAUqL,IAEZ,cAAC,IAAWvH,MAAZ,CAAmBvF,MAAO,EAA1B,wBACA,eAAC,IAAD,CAAKqF,MAAO,CAACiB,aAAa,UAAWlC,OAAQ,CAAC,GAAG,IAAjD,UACE,cAAC,IAAD,CAAMC,GAAI,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAnC,SACG,cAAC,IAAMgC,OAAP,CACC9B,YAAY,YACZ+B,SA5CO,SAACzF,GAChB,IACE,IAAM6B,EAAWQ,EAAiB5C,OAAOO,GACrC6B,GAAUmK,EAAgBnK,GAC9B,MAAOE,GACPC,QAAQC,IAAIF,SA0CV,cAAC,IAAD,CAAKsB,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIa,MAAO,CAAC8D,WAAW,QAAvD,SACE,cAAC,IAAD,CACE9D,MAAO,CAACvG,MAAM,QACdsK,KAAK,UACLC,MAAM,QACNC,KAAM,cAACC,EAAA,EAAD,IACNpE,QAAS,WACP0F,EAAQO,KAAK,oBANjB,sCAWJ,cAAC,IAAD,CAAKhH,OAAQ,CAAC,GAAG,IAAjB,SAEI1C,EAAaZ,KAAI,SAAAiF,GAAI,OACnB,cAAC,IAAD,CAAmB1B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA9C,SACG,cAAC,IAAD,CACGa,MAAO,CAAEtG,OAAO,QAChB0N,MAAO,qBAAKpH,MAAO,CAAEtG,OAAO,QAAU2N,IAAK3G,EAAK1E,MAAOsL,IAAK5G,EAAK1E,QACjEoI,UAAU,EACVC,WAAS,EAJZ,SAMG,cAAC,OAAD,CACExI,MACE,sBAAKkE,UAAU,uBAAf,UACE,mBAAGA,UAAU,sBAAb,SACGW,EAAK7E,QAER,cAAC,IAAD,CAAUkE,UAAU,qBAAqBI,QAASN,EAAMO,QAAS,CAAC,SAAlE,SACE,cAACC,EAAA,EAAD,CAAcP,QAAS,WAAK4H,EAAoBhH,EAAKjG,YAI3D6J,YACE,cAAC,IAAWjC,UAAZ,CAAsBC,SAAU,CAAC/C,KAAM,GAAvC,SACGmB,EAAK5E,gBApBR4E,EAAKjG,aCvDrBmN,GAAY,CAChBC,KAAM,aACNzN,UAAW0N,EACXpN,KAAM,YACNuJ,KAAM8D,KAGF7K,GAAY,CAChB2K,KAAM,aACNnN,KAAM,aACNN,UAAWoN,GACXvD,KAAK+D,KAGDC,GAAe,CACnBJ,KAAM,uBACNnN,KAAM,aACNN,UAAWmN,GACXtD,KAAK+D,IACLE,QAAQ,GA2CKC,GAVU,CACvBP,GACA1K,GAhCc,CACd2K,KAAM,WACNnN,KAAM,MACNN,UAAW0M,GACX7C,KAAMmE,KA8BNH,GA3Bc,CACdJ,KAAM,qBACNnN,KAAM,MACNN,UAAWiO,GACXpE,KAAK+D,IACLE,QAAQ,GAGG,CACXL,KAAM,QACNnN,KAAM,SACNN,UAAWwG,EACXqD,KpBxCqB,SAAC/J,GAAD,OAAgB,cAACC,EAAA,EAAD,aAAMC,UAAWZ,GAAYU,MoB4CpD,CACd2N,KAAM,QACNnN,KAAM,OACNN,UAAWoJ,EACXS,KAAMqE,M,mDC9BOC,OAlCf,YAAwF,IAAtEC,EAAqE,EAArEA,UAAWC,EAA0D,EAA1DA,WACrBjD,EAAU/B,cADqE,EAErD7G,mBAAS8L,WAAa,KAF+B,mBAE9EC,EAF8E,KAEpEC,EAFoE,KAYrF,OARAxL,qBAAU,WACR,IAAMyL,EAAe,kBAAMD,EAAYF,WAAa,MAEpD,OADAI,OAAOC,iBAAiB,SAASF,GAC1B,WACLC,OAAOE,oBAAoB,SAAUH,MAEtC,IAGD,eAAC,KAAD,CAAO9I,UAAU,UAAUK,QAAS,KAAM6I,aAAW,EAACT,UAAWA,EAAWU,WAAW,KAAKC,eAAgBR,EAAW,SAAMS,EAA7H,UACE,qBAAKrJ,UAAS,uBAAkByI,GAAa,qBAA7C,SACE,cAACa,GAAA,EAAD,CACEvJ,QAAS,WACP2I,SAIN,cAAC,IAAD,CAAMa,MAAM,OAAOC,KAAK,SAAUC,gBAAiBhB,EAAWiB,oBAAqB,CAAC,KAApF,SACGtB,GAAO1M,KAAI,SAAAiO,GAAK,OACdA,EAAMxB,QAAU,cAAC,IAAK9I,KAAN,CAEfU,QAAS,WAAK0F,EAAQO,KAAK2D,EAAM7B,OACjC5D,KAAM,cAACyF,EAAMzF,KAAP,IAHS,SAIfyF,EAAMhP,MAHDgP,EAAM7B,eCyBR8B,OAhDf,YAAsC,IAAvBC,EAAsB,EAAtBA,SAAsB,EACDhN,oBAAS,GADR,mBAC5B4L,EAD4B,KACjBqB,EADiB,OAEHjN,mBAAS8L,WAAa,KAFnB,mBAE5BC,EAF4B,KAElBC,EAFkB,KAYnC,OARAxL,qBAAU,WACR,IAAMyL,EAAe,kBAAMD,EAAYF,WAAa,MAEpD,OADAI,OAAOC,iBAAiB,SAASF,GAC1B,WACLC,OAAOE,oBAAoB,SAAUH,MAEtC,IAGD,eAAC,KAAD,WACI,cAAC,GAAD,CACEL,UAAWA,EACXC,WAAY,WACVoB,GAAcrB,MAGlB,eAAC,KAAD,CACExI,MAAO,CACL8D,WAAW6E,EAAW,EAAI,GAC1BtN,OAAQmN,EAAY,GAAK,mBAE3B1I,QAAS,SAACgK,GACRA,EAAEC,iBACFD,EAAEE,kBACFH,GAAa,IARjB,UAWE,cAAC,UAAD,UACGrB,GACD,cAACa,GAAA,EAAD,CACEtJ,UAAU,gCACVD,QAAS,WACP+J,GAAcrB,QAIpB,cAAC,WAAD,CAASzI,UAAU,iBAAnB,SACG6J,WCNEK,OAxCf,WACE,IAAMzE,EAAU/B,cAMhB,OACE,qBAAK1D,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CACEjB,OAAO,WACPD,SAXO,WACf2G,EAAQO,KAAK,eAQP,UAIE,cAAC,IAAK3G,KAAN,CACE1E,KAAK,QADP,SAGE,cAAC,IAAD,CAAO2E,YAAY,aAErB,eAAC,IAAKD,KAAN,CACE1E,KAAK,WADP,UAGE,cAAC,IAAD,CAAO2E,YAAY,QAAQ0E,KAAK,aAChC,cAAC,IAAD,CAAMhE,UAAU,eAAemK,GAAG,mBAAlC,oCAEF,cAAC,IAAK9K,KAAN,CAAWW,UAAU,2BAArB,SACE,cAAC,IAAD,CAAQA,UAAU,iBAAiB8G,SAAS,SAA5C,kCCPCsD,OAnBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtC,KAAK,IAAIzN,UAAW6P,GAAQG,OAAO,IAC1C,cAAC,GAAD,UAEIjC,GAAO1M,KAAI,SAACiO,GAAD,OACT,cAAC,IAAD,2BAEMA,GAFN,IAGEU,OAAO,IAFFV,EAAM7B,e,6BCZnBwC,GAAQC,aAAe,CAC3BC,QAAS,KCgBIC,OAVf,WACE,OACE,cAAC,KAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCTRI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87cbcb84.chunk.js","sourcesContent":["import React from 'react'\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst BedSvg = () => (\r\n  <svg width=\"1.25em\" height=\"1.25em\" viewBox=\"0 0 25 14\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M3.75 7.5C4.725 7.5 5.6875 7.125 6.425 6.375C7.875 4.8875 7.85 2.525 6.375 1.075C5.6375 0.3625 4.6875 0 3.75 0C2.775 0 1.8125 0.375 1.075 1.125C-0.375 2.6125 -0.35 4.975 1.125 6.425C1.8625 7.1375 2.8125 7.5 3.75 7.5ZM2.8625 2.875C3.1 2.6375 3.4125 2.5 3.75 2.5C4.075 2.5 4.3875 2.625 4.625 2.85C5.125 3.3375 5.125 4.1125 4.65 4.6125C4.4 4.8625 4.0875 5 3.75 5C3.425 5 3.1125 4.875 2.875 4.65C2.375 4.15 2.375 3.375 2.8625 2.875ZM20 0H8.75V7.5H25V5C25 2.2375 22.7625 0 20 0ZM11.25 5V2.5H20C21.375 2.5 22.5 3.625 22.5 5H11.25ZM0 11.25H7.5V13.75H17.5V11.25H25V8.75H0V11.25Z\" />\r\n  </svg>\r\n);\r\n\r\nconst WarningSvg = () => (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 22 19\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M11 3.99L18.53 17H3.47L11 3.99ZM11 0L0 19H22L11 0ZM12 14H10V16H12V14ZM12 8H10V12H12V8Z\" />\r\n  </svg>\r\n)\r\n\r\nconst DangerSvg = () => (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M15.73 3H8.27L3 8.27V15.73L8.27 21H15.73L21 15.73V8.27L15.73 3ZM19 14.9L14.9 19H9.1L5 14.9V9.1L9.1 5H14.9L19 9.1V14.9Z\" />\r\n    <path d=\"M12 17C12.5523 17 13 16.5523 13 16C13 15.4477 12.5523 15 12 15C11.4477 15 11 15.4477 11 16C11 16.5523 11.4477 17 12 17Z\" />\r\n    <path d=\"M11 7H13V14H11V7Z\" />\r\n  </svg>\r\n)\r\n\r\n\r\nexport const BedIcon = (props: any) => <Icon component={BedSvg} {...props} />\r\nexport const WarningIcon = (props: any) => <Icon component={WarningSvg} {...props} />\r\nexport const DangerIcon = (props: any) => <Icon component={DangerSvg} {...props} />\r\n\r\n","import { _statusBed } from 'views/Bed/bed'\r\n\r\nexport const getColorStatus = (status:_statusBed) =>{\r\n  switch (status) {\r\n    case 'empty':   return 'radial-gradient(50% 50% at 50% 50%, #709CDD 0%, #0F66E8 100%)'\r\n    case 'using':   return 'radial-gradient(50% 50% at 50% 50%, #71EC26 0%, #0DBD49 100%)'\r\n    case 'warning': return 'radial-gradient(50% 50% at 50% 50%, #F3F57F 0%, #ECF100 100%)'\r\n    case 'danger':  return 'radial-gradient(50% 50% at 50% 50%, #DD7077 0%, #FF1A27 100%)'\r\n    case 'disbled': return 'radial-gradient(50% 50% at 50% 50%, #E1E1E1 0%, #8D8D8D 100%)'\r\n    default:        return 'black'\r\n  }\r\n}","import { IBed } from \"./bed\"\r\n\r\nconst bedsMock: IBed[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Leito 1',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Leito 2',\r\n    level: 'II',\r\n    status: 'warning',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal',\r\n    warnings:[\r\n      'Aguardando limpeza.',\r\n      'Aguardando reposição de materiais.'\r\n    ]\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Leito 3',\r\n    level: 'II',\r\n    status: 'danger',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal',\r\n    failures:[\r\n      'Falta de oxigênio.',\r\n      'Falta de cânula de intubação.',\r\n      'Falta de laringoscópio .'\r\n    ]\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Leito 4',\r\n    level: 'II',\r\n    status: 'disbled',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Leito 5',\r\n    level: 'II',\r\n    status: 'using',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Leito 6',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Leito 7',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'Leito 8',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'Leito 9',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '10',\r\n    name: 'Leito 10',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '11',\r\n    name: 'Leito 11',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  },\r\n  {\r\n    id: '12',\r\n    name: 'Leito 12',\r\n    level: 'II',\r\n    status: 'empty',\r\n    ambient: 'Quarto',\r\n    classification: 'Neonatal'\r\n  }\r\n]\r\n\r\nexport default bedsMock","import { IResource } from \"types\"\r\nimport { IBed, _classificationUTI } from \"../bed\"\r\nimport bedsMock from \"../mock\"\r\n\r\nconst bed = {\r\n  list: (): IBed[] => {\r\n    return bedsMock\r\n  },\r\n  getById: (id?: string): IBed | undefined => {\r\n    return bedsMock.find(bed => bed.id == id)\r\n  },\r\n  search: (search: string): IBed[] => {\r\n    return bedsMock.filter(bed => bed.name.toLowerCase().includes(search.toLowerCase()))\r\n  },\r\n  resouce: (): IResource[] => {\r\n    return bedsMock.map(bed =>({label: bed.name, value: bed.id}))\r\n  }\r\n}\r\n\r\nexport default bed","const popList = [\r\n  {\r\n    id: '1',\r\n    title: 'Critérios de Alta da UTI 2016',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Critérios de Admissão em UTI 2016',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Diluição de medicamentos utilizados para sedação e analgesia',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Padronização Drogas vasoativas, crono e inotrópicas 2016',\r\n    describe: 'Modelo Round Multiprofissional com Checklist',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2013/07/18/10/59/pulse-trace-163708_1280.jpg'\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Controle de alarmes',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'Cuidados paliativos na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2013/07/18/10/59/pulse-trace-163708_1280.jpg'\r\n  },\r\n  {\r\n    id: '7',\r\n    title: 'Drogas vasoativas',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '8',\r\n    title: 'Reposição de eletrólitos na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '9',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Ventilação mecânica na SDRA',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n]\r\n\r\nexport default popList\r\n","import { IResource } from \"types\"\r\nimport popList from \"../mocks\"\r\nimport { IPOP } from \"../pop\"\r\n\r\nconst pop = {\r\n  list: (): IPOP[] => {\r\n    return popList\r\n  },\r\n  getById: (id?: string): IPOP | undefined => {\r\n    return popList.find(process => process.id == id)\r\n  },\r\n  search: (search: string): IPOP[] => {\r\n    return popList.filter(process => process.title.toLowerCase().includes(search.toLowerCase()))\r\n  },\r\n  resouce: (): IResource[] => {\r\n    return popList.map(process =>({label: process.title, value: process.id}))\r\n  }\r\n}\r\n\r\nexport default pop","const protocolsList = [\r\n  {\r\n    id: '1',\r\n    title: 'Critérios de Alta da UTI 2016',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Critérios de Admissão em UTI 2016',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Padronização Sedação e Analgesia 2016',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Padronização Drogas vasoativas, crono e inotrópicas 2016',\r\n    describe: 'Modelo Round Multiprofissional com Checklist',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2013/07/18/10/59/pulse-trace-163708_1280.jpg'\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Controle de alarmes',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'Cuidados paliativos na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2013/07/18/10/59/pulse-trace-163708_1280.jpg'\r\n  },\r\n  {\r\n    id: '7',\r\n    title: 'Drogas vasoativas',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '8',\r\n    title: 'Reposição de eletrólitos na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/05/19/43/pill-1884775_1280.jpg'\r\n  },\r\n  {\r\n    id: '9',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Ventilação mecânica na SDRA',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    image: 'https://cdn.pixabay.com/photo/2016/11/09/15/27/dna-1811955_1280.jpg'\r\n  },\r\n]\r\n\r\nexport default protocolsList","import { IResource } from \"types\"\r\nimport protocolList from \"../mocks\"\r\nimport { IProtocol } from \"../protocal\"\r\n\r\nconst protocol = {\r\n  list: (): IProtocol[] => {\r\n    return protocolList\r\n  },\r\n  getById: (id?: string): IProtocol | undefined => {\r\n    return protocolList.find(propocol => propocol.id == id)\r\n  },\r\n  search: (search: string): IProtocol[] => {\r\n    return protocolList.filter(propocol => propocol.title.toLowerCase().includes(search.toLowerCase()))\r\n  },\r\n  resouce: (): IResource[] => {\r\n    return protocolList.map(propocol =>({label: propocol.title, value: propocol.id}))\r\n  }\r\n}\r\n\r\nexport default protocol","import {Button, Col, Form, FormInstance, Input, Modal, Row, Select } from 'antd'\r\nimport React, { ReactNode, useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { IResource } from 'types'\r\nimport { IFailModeFormProps } from './failmode'\r\nimport bedConsumer from 'views/Bed/consumer/bed'\r\nimport processConsumer from 'views/POP/consumer/pop'\r\nimport protocolConsumer from 'views/Protocol/consumer/protocol'\r\n\r\nfunction FailModeForm({open, onClose, bed, process, protocol}: IFailModeFormProps) {\r\n  const formRef = useRef<FormInstance<any>>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [beds, setBeds] = useState<IResource[]>([])\r\n  const [pops, setPops] = useState<IResource[]>([])\r\n  const [protocols, setProtopols] = useState<IResource[]>([])\r\n\r\n  const onSubmit = () => {\r\n\r\n  } \r\n\r\n  useEffect(() => {\r\n    if(open){\r\n       formRef.current?.setFieldsValue({\r\n        bed,\r\n        process,\r\n        protocol\r\n       })\r\n    }\r\n  }, [open, bed, process, protocol])\r\n\r\n  useLayoutEffect(() => {\r\n    const getBeds = () => {\r\n      try {\r\n        const response = bedConsumer.resouce()\r\n        if (response) setBeds(response)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    const getProcess = () => {\r\n      try {\r\n        const response = processConsumer.resouce()\r\n        if (response) setPops(response)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    const getProtocols = () => {\r\n      try {\r\n        const response = protocolConsumer.resouce()\r\n        if (response) setProtopols(response)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    getBeds()\r\n    getProcess()\r\n    getProtocols()\r\n  }, [])\r\n\r\n  return (\r\n    <Modal \r\n      title=\"Relatar falha\"\r\n      visible={open} \r\n      onCancel={() => {\r\n        formRef.current?.resetFields()\r\n        onClose()\r\n      }}\r\n      onOk={() => {formRef.current?.submit()}}\r\n      okText='Salvar'\r\n      cancelText=\"Cancelar\"\r\n      okButtonProps={{\r\n        loading:isLoading\r\n      }}\r\n      width={900}\r\n      centered\r\n    >\r\n      <Form\r\n        ref={formRef}\r\n        onFinish={onSubmit}\r\n        layout=\"vertical\"\r\n      >\r\n        <Row gutter={{lg:15, md:15, sm:0, xs:0}}>\r\n          <Col lg={12} md={12} sm={24} xs={24}>\r\n            <Form.Item\r\n              name=\"title\"\r\n              label=\"Titulo\"\r\n              >\r\n              <Input placeholder=\"Digite um titulo\"/>\r\n            </Form.Item>\r\n        \r\n            <Form.Item\r\n              name=\"describe\"\r\n              label=\"Descrição\"\r\n            >\r\n              <Input.TextArea  rows={bed ? 9 : 5} placeholder=\"Descreva o problema encontrado\"/>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={12} md={12} sm={24} xs={24}>\r\n           {\r\n              bed && \r\n              <Form.Item\r\n                name=\"status\"\r\n                label=\"Status\"\r\n              >\r\n                <Select placeholder=\"Selecione um status\">\r\n                  <Select.Option value=\"warning\"> Atenção</Select.Option>\r\n                  <Select.Option value=\"danger\">  Indisponível</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            }\r\n            <Form.Item\r\n              name=\"protocol\"\r\n              label=\"Protocolo\"\r\n            >\r\n              <Select \r\n                placeholder=\"Selecione um protocolo\"\r\n                options={protocols}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"process\"\r\n              label=\"POP\"\r\n            >\r\n              <Select \r\n                placeholder=\"Selecione um processo\"\r\n                options={pops}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"bed\"\r\n              label=\"Leito\"\r\n            >\r\n              <Select \r\n                placeholder=\"Selecione um Leito\"         \r\n                options={beds}\r\n              />\r\n            </Form.Item>\r\n          </Col> \r\n        </Row>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FailModeForm\r\n\r\n","import React, { useState } from 'react'\r\nimport { Card, Typography, Menu, Dropdown } from 'antd'\r\nimport { getColorStatus } from 'utils'\r\nimport { DangerIcon, WarningIcon } from 'assets/Icons'\r\nimport { MoreOutlined } from '@ant-design/icons'\r\nimport FailModeForm from 'views/FMEA/FailModeForm'\r\nimport { IBed, _statusBed } from './bed'\r\n\r\n\r\nfunction HeaderCard({ name, status, id }: { name: string, status: _statusBed, id: string}) {\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\" onClick={()=>{setOpenModal(true)}}>\r\n        Relatar Falha\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"CardBed__header\">\r\n      <FailModeForm \r\n        open={openModal}\r\n        onClose={()=>{\r\n          setOpenModal(false)\r\n        }}\r\n        bed={id}\r\n      />\r\n      <div style={{ background: getColorStatus(status) }} />\r\n      <Typography.Title level={5}>{name}</Typography.Title>\r\n      <Dropdown className=\"CardBed__menu\" overlay={menu} trigger={['click']}>\r\n        <MoreOutlined />\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CardBed({ bed }: { bed: IBed }) {\r\n  const { name, status, failures, warnings, patient, level, ambient, classification, specialty, id } = bed\r\n  return (\r\n    <Card className={`CardBed ${['disbled'].includes(status) && 'CardBed__disbled'}`} title={<HeaderCard id={id} name={name} status={status} />}>\r\n      {\r\n        ['warning'].includes(status) && warnings?.length && (\r\n          warnings.map((item, idx) => (\r\n            <div className=\"CardBed__List CardBed__List--warning\" key={idx}>\r\n              <WarningIcon />\r\n              <p>{item}</p>\r\n            </div>\r\n          ))\r\n        )\r\n      }\r\n      {\r\n        ['danger'].includes(status) && failures?.length && (\r\n          failures.map((item, idx) => (\r\n            <div className=\"CardBed__List CardBed__List--danger\" key={idx}>\r\n              <DangerIcon/>\r\n              <p>{item}</p>\r\n            </div>\r\n          ))\r\n        )\r\n      }\r\n      {\r\n        ['using'].includes(status) && patient && (\r\n          <>\r\n          </>\r\n        )\r\n      }\r\n      {\r\n        ['empty', 'disbled'].includes(status) && (\r\n          <div className=\"CardBed__props\">\r\n            <p><strong>Tipo:</strong>{level}</p>\r\n            <p><strong>Ambiente:</strong>{ambient}</p>\r\n            <p><strong>Classificação:</strong>{classification}</p>\r\n            {['Especializada'].includes(classification) && <p><strong>Especializadade:</strong>{specialty}</p>}\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardBed\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Col, Input, Row, Typography, List, Card } from 'antd'\r\nimport CardBed from './BedCard'\r\nimport FailModeForm from 'views/FMEA/FailModeForm' \r\nimport { IBed } from './bed'\r\nimport bedConsumer from './consumer/bed'\r\n\r\nfunction BedsList() {\r\n  const [bedsList, setBedsList] = useState<IBed[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n \r\n\r\n  const getFields = () => {\r\n    setIsLoading(true)\r\n    const timeOut = setTimeout(() => {\r\n      const response = bedConsumer.list()\r\n      if (response) setBedsList(response)\r\n      setIsLoading(false)\r\n    }, 3000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFields()\r\n  }, [])\r\n\r\n  const onSearch = (value: string ) => {\r\n    try {\r\n      const response = bedConsumer.search(value)\r\n      if (response) setBedsList(response)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <Typography.Title level={2} >Leitos</Typography.Title>\r\n      <Row style={{ marginBottom: '1.5rem' }}>\r\n        <Col span={12}>\r\n          <Input.Search\r\n            placeholder=\"Pesquisar\"\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <List\r\n        grid={{ \r\n          gutter: 16,\r\n          column: 3,\r\n          lg:3,\r\n          md:1,\r\n          sm:2,\r\n          xs:1\r\n        }}  \r\n        pagination={{\r\n          pageSize: 6,\r\n          responsive: false,\r\n        }}\r\n        loading={isLoading}\r\n        dataSource={bedsList}\r\n        renderItem={(item: IBed) => (\r\n          <List.Item>\r\n            <CardBed bed={item} />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BedsList\r\n","import { IfailMode } from \"./failmode\";\r\n\r\nexport const failModes: IfailMode[] = [\r\n  {\r\n    id: '1',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'3',\r\n    protocol:'4',\r\n  } ,\r\n  {\r\n    id: '1',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'5',\r\n    RPN:80\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Falta de insulmos pra diluição de medicamentos',\r\n    describe: 'Falta de insulmos pra diluição de medicamentos utilizados para sedação e analgesia. Bloqueadores Neuromusculares ',\r\n    createAt: '',\r\n    process:'3',\r\n    protocol:'3',\r\n    RPN:100\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    protocol:'6',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'4',\r\n  },  \r\n  {\r\n    id: '5',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'3',\r\n    RPN:9\r\n  },  \r\n  {\r\n    id: '6',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'3',\r\n    protocol:'4',\r\n  },  \r\n  {\r\n    id: '7',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'1',\r\n    process:'1',\r\n    protocol:'1',\r\n    RPN:23\r\n  },  \r\n  {\r\n    id: '8',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'3',\r\n    protocol:'4',\r\n    RPN:59\r\n  },  \r\n  {\r\n    id: '9',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    protocol:'6',\r\n    RPN:9\r\n  },  \r\n  {\r\n    id: '10',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    process:'3',\r\n    protocol:'4',\r\n    RPN:80\r\n  },  \r\n  {\r\n    id: '11',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'5',\r\n    protocol:'4',\r\n    RPN:20\r\n  },  \r\n  {\r\n    id: '12',\r\n    title: 'Terapia de substituição renal na UTI',\r\n    describe: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus cursus sem nec rutrum iaculis. Vestibulum malesuada leo sed velit malesuada malesuada.',\r\n    createAt: '',\r\n    bed:'2',\r\n    RPN: 120\r\n  },\r\n]","import React, { useEffect, useRef, useState } from 'react'\r\nimport { FormInstance, Modal, Form, Typography, Slider, Divider } from 'antd'\r\nimport { IfailMode } from './failmode'\r\n\r\ninterface IRPNModalProps {\r\n  open: boolean\r\n  onClose: () => void\r\n  failMode?: IfailMode\r\n}\r\n\r\nfunction RPNModal ({open, onClose, failMode}: IRPNModalProps) {\r\n  const formRef = useRef<FormInstance<any>>(null)\r\n  const [isLoading, setIsLoading] =  useState(false)\r\n\r\n  const onSubmit = () => {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!failMode && open) {\r\n      Modal.error({\r\n        title:'Atenção!',\r\n        content: 'Modo de falha não econtrado, tente novamente mais tarde.',\r\n      })\r\n    }\r\n  },[failMode])\r\n\r\n  const formatter = (value?: number)=> {\r\n    switch (value) {\r\n      case 1: return 'Nunca'\r\n      case 2: return 'Raramente'\r\n      case 3: return 'Muito baixa'\r\n      case 4: return 'Baixa'\r\n      case 5: return 'Moderada p/ baixa'\r\n      case 6: return 'Moderada'\r\n      case 7: return 'Moderada p/ alta'\r\n      case 8: return 'Alta'\r\n      case 9: return 'Muito ALta'\r\n      case 10: return'Sempre'\r\n      default: return ''\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title={failMode?.title}\r\n      visible={open} \r\n      className=\"rpn-modal\"\r\n      onCancel={() => {\r\n        formRef.current?.resetFields()\r\n        onClose()\r\n      }}\r\n      destroyOnClose\r\n      onOk={() => {formRef.current?.submit()}}\r\n      okText='Salvar'\r\n      cancelText=\"Cancelar\"\r\n      okButtonProps={{\r\n        loading:isLoading\r\n      }}\r\n      centered\r\n    >\r\n      <Typography.Paragraph\r\n        ellipsis={{\r\n          rows: 5,\r\n          expandable: true,\r\n          symbol: ' Exibir mais',  \r\n        }}\r\n      >\r\n        {failMode?.describe}\r\n      </Typography.Paragraph>\r\n      <Form\r\n        ref={formRef}\r\n        onFinish={onSubmit}\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item \r\n          name=\"severity\" \r\n          label=\"Gravidade do problema\"\r\n          help=\"no qual 1 é “nunca” e 10 é “sempre”\"\r\n        >\r\n          <Slider\r\n            max={10}\r\n            min={1}\r\n            tipFormatter={formatter}\r\n            marks={{\r\n              1: '1',\r\n              2: '2',\r\n              3: '3',\r\n              4: '4',\r\n              5: '5',\r\n              6: '6',\r\n              7: '7',\r\n              8: '8',\r\n              9: '9',\r\n              10: '10',\r\n            }}\r\n          />\r\n      </Form.Item>\r\n      <Divider/>\r\n      <Form.Item \r\n        name=\"occorence\" \r\n        label=\"Probabilidade de ocorrência\"\r\n        help=\"no qual 1 é “nunca” e 10 é “sempre”\"\r\n      >\r\n        <Slider\r\n          max={10}\r\n          min={1}\r\n          tipFormatter={formatter}\r\n          marks={{\r\n            1: '1',\r\n            2: '2',\r\n            3: '3',\r\n            4: '4',\r\n            5: '5',\r\n            6: '6',\r\n            7: '7',\r\n            8: '8',\r\n            9: '9',\r\n            10: '10',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n      <Divider/>\r\n      <Form.Item \r\n          name=\"detection\" \r\n          label=\"Probabilidade de detecção da falha\"\r\n          help=\"No qual 10 é “nunca” e 1 é “sempre”\"\r\n        >\r\n          <Slider\r\n            max={10}\r\n            min={1}\r\n            tipFormatter={formatter}\r\n            marks={{\r\n              1: '10',\r\n              2: '9',\r\n              3: '8',\r\n              4: '7',\r\n              5: '6',\r\n              6: '5',\r\n              7: '4',\r\n              8: '3',\r\n              9: '2',\r\n              10: '1',\r\n            }}\r\n          />\r\n      </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RPNModal\r\n","import React, { useState } from 'react'\r\nimport { Row, Input, Col, Card,Button, Typography, Menu, Dropdown } from 'antd'\r\nimport { failModes } from './mocks'\r\nimport { Meta } from 'antd/lib/list/Item'\r\nimport { PlusCircleOutlined  } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router'\r\nimport FailModeForm from 'views/FMEA/FailModeForm'\r\nimport { MoreOutlined } from '@ant-design/icons'\r\nimport bedConsumer from 'views/Bed/consumer/bed'\r\nimport processConsumer from 'views/POP/consumer/pop'\r\nimport protocolConsumer from 'views/Protocol/consumer/protocol'\r\nimport RPNModal from './RPNModal'\r\nimport { IfailMode } from './failmode'\r\n\r\nfunction FailModeList () {\r\n  const history = useHistory()\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [openModalRPN, setOpenModalRPN] = useState(false)\r\n  const [selectedFailMode, setSelectedFailMode] = useState<IfailMode>()\r\n\r\n  \r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\" onClick={()=>{setOpenModalRPN(true)}}>\r\n        Avaliar Falha\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const getColorRPN = (rpn?:number) => {\r\n    if(!rpn) return '#8D8D8D'\r\n    if(rpn > 70) return '#FF1A27'\r\n    if(rpn > 20 && rpn <= 70) return '#ECF100'\r\n    if(rpn > 0 && rpn <= 20) return '#0DBD49'\r\n    else return '#8D8D8D'\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <FailModeForm \r\n        open={openModal}\r\n        onClose={()=>{\r\n          setOpenModal(false)\r\n        }}\r\n      />\r\n      <RPNModal\r\n        open={openModalRPN}\r\n        onClose={()=>{\r\n          setOpenModalRPN(false)\r\n        }}\r\n        failMode={selectedFailMode}\r\n      />\r\n      <Typography.Title  level={2}>Modos de Falha</Typography.Title>\r\n      <Row style={{marginBottom:'1.5rem'}}  gutter={[15,15]}>\r\n        <Col  lg={10}  md={14} sm={24} xs={24}>\r\n           <Input.Search\r\n            placeholder=\"Pesquisar\"\r\n           />\r\n        </Col>\r\n        <Col lg={6} md={10} sm={24} xs={24} style={{marginLeft:'auto'}}>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => {\r\n              setOpenModal(true)\r\n            }}\r\n          >Relatar Falha</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16,20]}>\r\n        {\r\n          failModes.map(item => (\r\n            <Col key={item.id} lg={6} md={12} sm={24} xs={24}>\r\n               <Card \r\n                  className=\"failModeCard\"\r\n                  bordered={false}\r\n                  hoverable\r\n                >\r\n                  <Meta \r\n                    title={\r\n                      <div className=\"failModeCard__header\">\r\n                        <p className=\"failModeCard__title\">\r\n                          {item.title}\r\n                        </p>\r\n                        <Dropdown className=\"failModeCard__menu\" overlay={menu} trigger={['click']}>\r\n                          <MoreOutlined onClick={()=>{setSelectedFailMode(item)}}/>\r\n                        </Dropdown>\r\n                      </div>\r\n                    }\r\n                    description={\r\n                      <>\r\n                        <p \r\n                          className=\"failModeCard__rpn\"\r\n                          style={{color:getColorRPN(item.RPN)  }}\r\n                        >\r\n                          {item.RPN ?  item.RPN  : '-'}\r\n                        </p>\r\n                        <table className=\"failModeCard__table\">\r\n                          <tbody>\r\n                            {\r\n                              Boolean(item.bed) && (\r\n                              <tr className=\"failModeCard__row\">\r\n                                <th className=\"failModeCard__label\">Leito</th>\r\n                                <td className=\"failModeCard__value\">\r\n                                  <Typography.Paragraph ellipsis={{rows:1, tooltip:bedConsumer.getById(item.bed)?.name}}>\r\n                                    {bedConsumer.getById(item.bed)?.name}\r\n                                  </Typography.Paragraph>\r\n                                </td>\r\n                              </tr>\r\n                              )\r\n                            }\r\n                            {\r\n                              Boolean(item.protocol) && (\r\n                              <tr className=\"failModeCard__row\">\r\n                                <th className=\"failModeCard__label\">Protocolo</th>\r\n                                <td className=\"failModeCard__value\">\r\n                                  <Typography.Paragraph ellipsis={{rows:2, tooltip:protocolConsumer.getById(item.protocol)?.title}}>\r\n                                    {protocolConsumer.getById(item.protocol)?.title}\r\n                                  </Typography.Paragraph>\r\n                                </td>\r\n                              </tr>\r\n                              )\r\n                            }\r\n                            {\r\n                              Boolean(item.process) && (\r\n                              <tr className=\"failModeCard__row\">\r\n                                <th className=\"failModeCard__label\">POP</th>\r\n                                <td className=\"failModeCard__value\">\r\n                                  <Typography.Paragraph ellipsis={{rows:2, tooltip:processConsumer.getById(item.process)?.title}}>\r\n                                    {processConsumer.getById(item.process)?.title}\r\n                                  </Typography.Paragraph>\r\n                                </td>\r\n                              </tr>\r\n                              )\r\n                            }\r\n                            \r\n                          </tbody>\r\n                        </table>\r\n                      </>\r\n                    }\r\n                  />\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default FailModeList\r\n\r\n","import React from 'react'\r\nimport { Typography } from 'antd'\r\n\r\nfunction Dashboard () {\r\n  return (\r\n    <div>\r\n      <Typography.Title  level={2}>Dashboard</Typography.Title>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { Editor as TinyMCEEditor } from 'tinymce';\r\n\r\ninterface IRichText {\r\n  onEditorChange: (a: string, editor: TinyMCEEditor) => void;\r\n}\r\n\r\nfunction RichText({onEditorChange}:IRichText) {\r\n  const editorRef = useRef<any>(null);\r\n\r\n  return (\r\n    <Editor\r\n      apiKey={process.env.REACT_APP_RICHTEXT_API_KEY}\r\n      onInit={(evt, editor) => editorRef.current = editor}\r\n      onEditorChange={onEditorChange}\r\n      init={{\r\n        height: 500,\r\n        menubar: false,\r\n        plugins: [\r\n          'advlist autolink lists link image charmap print preview anchor image',\r\n          'searchreplace visualblocks code fullscreen',\r\n          'insertdatetime media table paste code wordcount'\r\n        ],\r\n        toolbar: 'undo redo | formatselect | ' +\r\n        'bold italic backcolor | alignleft aligncenter ' +\r\n        'alignright alignjustify | bullist numlist outdent indent | ' +\r\n        'removeformat | image',\r\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RichText\r\n","import React, { ReactNode, useRef, useState } from 'react'\r\nimport { Row, Typography, Form, FormInstance, Input, Col, Button } from 'antd'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\nimport RichText from 'components/RichText/RichText'\r\nimport { Editor as TinyMCEEditor } from 'tinymce';\r\nimport { IPOP, IPOPError } from './pop'\r\nimport {CloseCircleOutlined, PlusCircleOutlined} from '@ant-design/icons'\r\n\r\nfunction popForm(): ReactNode {\r\n  const history = useHistory()\r\n  const formRef = useRef<FormInstance<IPOP>>(null)\r\n  const { id } : { id: string } = useParams()\r\n\r\n  const [errors, setErrors] = useState<IPOPError>({})\r\n\r\n  const onSubmit = async (values: IPOP) => {\r\n    console.log(values)\r\n  }\r\n\r\n  const onEditorChange = (html: string, editor: TinyMCEEditor) => {\r\n    formRef.current?.setFieldsValue({\r\n      describe: editor.getContent({format : 'text'}),\r\n      describeHTML: html\r\n    })  \r\n  }\r\n\r\n  return (\r\n    <div className=\"popForm\">\r\n      <div className=\"popForm__header\">\r\n        <ArrowLeftOutlined className=\"popForm__goback-icon\" onClick={()=> history.push('/protocols')} />\r\n        <Typography.Title className=\"popForm__title\" level={2}>{id? 'Editar POP': 'Novo POP'}</Typography.Title>\r\n      </div>\r\n      <Form\r\n        className=\"popForm__form\"\r\n        ref={formRef}\r\n        layout=\"vertical\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Form.Item\r\n          name='title'\r\n          label='Titulo'\r\n          help={errors.title && errors.title}\r\n          validateStatus={errors.title && ('error')}\r\n        >\r\n          <Input placeholder=\"Digite o titulo\"></Input>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='describeHTML'\r\n          label='Descrição'\r\n          className=\"popForm__richText\"\r\n          help={errors.describe && errors.describe}\r\n          validateStatus={errors.describe && ('error')}\r\n        >\r\n          <RichText\r\n            onEditorChange={onEditorChange}\r\n          />\r\n        </Form.Item>\r\n        <div className=\"popForm__form-list\">\r\n          <label>CheckList</label>\r\n          <Form.List\r\n            name=\"checkList\"\r\n          >\r\n            {(fields,{add, remove}) => (\r\n              <div>\r\n                {fields.map(field => (\r\n                  <div key={field.fieldKey} className=\"popForm__item\">\r\n                    <Form.Item                 \r\n                      {...field} \r\n                      noStyle\r\n                    >\r\n                      <Input \r\n                        className=\"popForm__input\" \r\n                        placeholder=\"Digite o item\"\r\n                      />\r\n                    </Form.Item>\r\n                    <CloseCircleOutlined className=\"popForm__remove\" onClick={() => remove(field.name)}/>  \r\n                  </div>\r\n                ))}\r\n                <Button onClick={()=>add()}>\r\n                  <PlusCircleOutlined /> Adicionar Item\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Form.List>\r\n        </div>\r\n        <Form.Item>\r\n          <Button \r\n            className=\"popForm__button\"\r\n            onClick={()=> formRef.current?.submit()}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default popForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Input, Col, Card,Button, Typography, Menu, Dropdown } from 'antd'\r\nimport { Meta } from 'antd/lib/list/Item'\r\nimport { PlusCircleOutlined  } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router'\r\nimport FailModeForm from 'views/FMEA/FailModeForm'\r\nimport { MoreOutlined } from '@ant-design/icons'\r\nimport popConsumer  from './consumer/pop'\r\nimport { IPOP } from './pop'\r\n\r\nfunction POPList () {\r\n  const history = useHistory()\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [selectedProcess, setSelectedProcess] = useState('')\r\n  const [processList, setprocessList] = useState<IPOP[]>([])\r\n\r\n  const onSearch = (value: string ) => {\r\n    try {\r\n      const response = popConsumer.search(value)\r\n      if (response) setprocessList(response)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getProcess = () => {\r\n      try {\r\n        const response = popConsumer.list()\r\n        if (response) setprocessList(response)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getProcess()\r\n  }, [])\r\n\r\n\r\n  \r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\" onClick={()=>{setOpenModal(true)}}>\r\n        Relatar Falha\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <section>\r\n       <FailModeForm \r\n          open={openModal}\r\n          onClose={()=>{\r\n            setOpenModal(false)\r\n          }}\r\n          process={selectedProcess}\r\n        />\r\n      <Typography.Title  level={2}>POP</Typography.Title>\r\n      <Row style={{marginBottom:'1.5rem'}}  gutter={[15,15]}>\r\n        <Col  lg={10}  md={14} sm={24} xs={24}>\r\n           <Input.Search\r\n            placeholder=\"Pesquisar\"\r\n            onSearch={onSearch}\r\n           />\r\n        </Col>\r\n        <Col lg={6} md={10} sm={24} xs={24} style={{marginLeft:'auto'}}>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => {\r\n              history.push('/process/form')\r\n            }}\r\n          >Adicionar Processo</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16,20]}>\r\n        {\r\n          processList.map(item => (\r\n            <Col key={item.id} lg={6} md={12} sm={24} xs={24}>\r\n               <Card \r\n                  style={{ height:'60vh' }}\r\n                  cover={<img style={{ height:'25vh' }} src={item.image} alt={item.image}></img>} \r\n                  bordered={false}\r\n                  hoverable\r\n                >\r\n                  <Meta \r\n                    title={\r\n                      <div className=\"popCard__header\">\r\n                        <p className=\"popCard__title\">\r\n                          {item.title}\r\n                        </p>\r\n                        <Dropdown className=\"popCard__menu\" overlay={menu} trigger={['click']}>\r\n                          <MoreOutlined onClick={()=>{setSelectedProcess(item.id)}}/>\r\n                        </Dropdown>\r\n                      </div>\r\n                    }\r\n                    description={\r\n                      <Typography.Paragraph ellipsis={{rows: 4}}>\r\n                        {item.describe}\r\n                      </Typography.Paragraph>\r\n                    }\r\n                  />\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default POPList\r\n","import React, { ReactNode, useRef, useState } from 'react'\r\nimport { Row, Typography, Form, FormInstance, Input, Col, Button } from 'antd'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\nimport RichText from 'components/RichText/RichText'\r\nimport { Editor as TinyMCEEditor } from 'tinymce';\r\nimport { IProtocol, IProtocolError } from './protocal'\r\nimport {CloseCircleOutlined, PlusCircleOutlined} from '@ant-design/icons'\r\n\r\nfunction ProtocolForm(): ReactNode {\r\n  const history = useHistory()\r\n  const formRef = useRef<FormInstance<IProtocol>>(null)\r\n  const { id } : { id: string } = useParams()\r\n\r\n  const [errors, setErrors] = useState<IProtocolError>({})\r\n\r\n  const onSubmit = async (values: IProtocol) => {\r\n    console.log(values)\r\n  }\r\n\r\n  const onEditorChange = (html: string, editor: TinyMCEEditor) => {\r\n    formRef.current?.setFieldsValue({\r\n      describe: editor.getContent({format : 'text'}),\r\n      describeHTML: html\r\n    })  \r\n  }\r\n\r\n  return (\r\n    <div className=\"protocolForm\">\r\n      <div className=\"protocolForm__header\">\r\n        <ArrowLeftOutlined className=\"protocolForm__goback-icon\" onClick={()=> history.push('/protocols')} />\r\n        <Typography.Title className=\"protocolForm__title\" level={3}>{id? 'Editar Protocolo': 'Novo Protocolo'}</Typography.Title>\r\n      </div>\r\n      <Form\r\n        className=\"protocolForm__form\"\r\n        ref={formRef}\r\n        layout=\"vertical\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Form.Item\r\n          name='title'\r\n          label='Titulo'\r\n          help={errors.title && errors.title}\r\n          validateStatus={errors.title && ('error')}\r\n        >\r\n          <Input placeholder=\"Digite o titulo\"></Input>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='describeHTML'\r\n          label='Descrição'\r\n          className=\"protocolForm__richText\"\r\n          help={errors.describe && errors.describe}\r\n          validateStatus={errors.describe && ('error')}\r\n        >\r\n          <RichText\r\n            onEditorChange={onEditorChange}\r\n          />\r\n        </Form.Item>\r\n        <div className=\"protocolForm__form-list\">\r\n          <label>CheckList</label>\r\n          <Form.List\r\n            name=\"checkList\"\r\n          >\r\n            {(fields,{add, remove}) => (\r\n              <div>\r\n                {fields.map(field => (\r\n                  <div key={field.fieldKey} className=\"protocolForm__item\">\r\n                    <Form.Item                 \r\n                      {...field} \r\n                      noStyle\r\n                    >\r\n                      <Input \r\n                        className=\"protocolForm__input\" \r\n                        placeholder=\"Digite o item\"\r\n                      />\r\n                    </Form.Item>\r\n                    <CloseCircleOutlined className=\"protocolForm__remove\" onClick={() => remove(field.name)}/>  \r\n                  </div>\r\n                ))}\r\n                <Button onClick={()=>add()}>\r\n                  <PlusCircleOutlined /> Adicionar Item\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Form.List>\r\n        </div>\r\n        <Form.Item>\r\n          <Button \r\n            className=\"protocolForm__button\"\r\n            onClick={()=> formRef.current?.submit()}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProtocolForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Input, Col, Card,Button, Typography, Menu, Dropdown } from 'antd'\r\nimport { Meta } from 'antd/lib/list/Item'\r\nimport { PlusCircleOutlined  } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router'\r\nimport { MoreOutlined } from '@ant-design/icons'\r\nimport FailModeForm from 'views/FMEA/FailModeForm'\r\nimport { IProtocol } from './protocal'\r\nimport protocolConsumer from './consumer/protocol'\r\n\r\nfunction ProtocolsList () {\r\n  const history = useHistory()\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [selectedProtocol, setSelectedProtocol] = useState('')\r\n  const [protocolList, setProtocolList] = useState<IProtocol[]>([])\r\n\r\n  const onSearch = (value: string ) => {\r\n    try {\r\n      const response = protocolConsumer.search(value)\r\n      if (response) setProtocolList(response)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getProcess = () => {\r\n      try {\r\n        const response = protocolConsumer.list()\r\n        if (response) setProtocolList(response)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getProcess()\r\n  }, [])\r\n\r\n  \r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\" onClick={()=>{setOpenModal(true)}}>\r\n        Relatar Falha\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <section>\r\n      <FailModeForm \r\n        open={openModal}\r\n        onClose={()=>{\r\n          setOpenModal(false)\r\n        }}\r\n        protocol={selectedProtocol}\r\n      />\r\n      <Typography.Title  level={2} >Protocolos</Typography.Title>\r\n      <Row style={{marginBottom:'1.5rem'}} gutter={[15,15]}>\r\n        <Col  lg={10}  md={14} sm={24} xs={24}>\r\n           <Input.Search\r\n            placeholder=\"Pesquisar\"\r\n            onSearch={onSearch}\r\n           />\r\n        </Col>\r\n        <Col lg={6} md={10} sm={24} xs={24} style={{marginLeft:'auto'}}>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            icon={<PlusCircleOutlined />}\r\n            onClick={() => {\r\n              history.push('/protocols/form')\r\n            }}\r\n          >Adicionar Protocolo</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16,20]}>\r\n        {\r\n          protocolList.map(item => (\r\n            <Col key={item.id} lg={6} md={12} sm={24} xs={24}>\r\n               <Card \r\n                  style={{ height:'60vh' }}\r\n                  cover={<img style={{ height:'25vh' }} src={item.image} alt={item.image}></img>} \r\n                  bordered={false}\r\n                  hoverable\r\n                >\r\n                  <Meta \r\n                    title={\r\n                      <div className=\"protocolCard__header\">\r\n                        <p className=\"protocolCard__title\">\r\n                          {item.title}\r\n                        </p>\r\n                        <Dropdown className=\"protocolCard__menu\" overlay={menu} trigger={['click']}>\r\n                          <MoreOutlined onClick={()=>{setSelectedProtocol(item.id)}}/>\r\n                        </Dropdown>\r\n                      </div>\r\n                    }\r\n                    description={\r\n                      <Typography.Paragraph ellipsis={{rows: 4}}>\r\n                        {item.describe}\r\n                      </Typography.Paragraph>\r\n                    }\r\n\r\n                  />\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProtocolsList\r\n","import { FileProtectOutlined, AppstoreOutlined, FileTextOutlined, DotChartOutlined } from '@ant-design/icons'\r\nimport { BedIcon } from 'assets/Icons'\r\nimport { ReactNode } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport BedsList from 'views/Bed/BedsList'\r\nimport FailMode from 'views/FMEA/FailModeForm'\r\nimport FailModeList from 'views/FMEA/FailModeList'\r\n\r\nimport Home from 'views/Dashboard/Dashboard'\r\nimport POPForm from 'views/POP/POPForm'\r\nimport POPList from 'views/POP/POPList'\r\nimport ProtocolForm from 'views/Protocol/ProtocolForm'\r\nimport ProtocolsList from 'views/Protocol/ProtocolList'\r\n\r\nexport interface IRoute {\r\n  path: string\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any> | any\r\n  name: string\r\n  exact?: boolean\r\n  icon: ReactNode | any\r\n  hidden?: boolean\r\n}\r\n\r\nconst dashboard = {\r\n  path: '/dashboard',\r\n  component: Home,\r\n  name: 'Dashboard',\r\n  icon: AppstoreOutlined\r\n}\r\n\r\nconst protocols = {\r\n  path: '/protocols',\r\n  name: 'Protocolos',\r\n  component: ProtocolsList,\r\n  icon:FileProtectOutlined\r\n}\r\n\r\nconst protocolForm = {\r\n  path: '/protocols/form/:id?',\r\n  name: 'Protocolos',\r\n  component: ProtocolForm,\r\n  icon:FileProtectOutlined,\r\n  hidden: true\r\n}\r\n\r\nconst process = {\r\n  path: '/process',\r\n  name: 'POP',\r\n  component: POPList,\r\n  icon: FileTextOutlined\r\n}\r\n\r\nconst popform = {\r\n  path: '/process/form/:id?',\r\n  name: 'POP',\r\n  component: POPForm,\r\n  icon:FileProtectOutlined,\r\n  hidden: true\r\n}\r\n\r\nconst Beds = {\r\n  path: '/beds',\r\n  name: 'Leitos',\r\n  component: BedsList,\r\n  icon: BedIcon\r\n}\r\n\r\n\r\nconst fmeaTab = {\r\n  path: '/fmea',\r\n  name: 'FMEA',\r\n  component: FailModeList,\r\n  icon: DotChartOutlined\r\n}\r\n\r\nconst routes:IRoute[] =  [ \r\n  dashboard,\r\n  protocols,\r\n  process,\r\n  protocolForm,\r\n  popform,\r\n  Beds,\r\n  fmeaTab\r\n]\r\n\r\nexport default routes\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Sider from 'antd/lib/layout/Sider'\r\nimport { Menu } from 'antd'\r\nimport { MenuOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport routes from 'routes/routes'\r\n\r\nfunction Sidebar({collapsed, onCollapse}:{collapsed: boolean, onCollapse: () => void}) {\r\n  const history = useHistory()\r\n  const [isMobile, setISMobile] = useState(innerWidth < 768)\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setISMobile(innerWidth < 768)\r\n    window.addEventListener(\"resize\",handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Sider className=\"Sidebar\" trigger={null} collapsible collapsed={collapsed} breakpoint='sm' collapsedWidth={isMobile ? \"0\" : undefined}>\r\n      <div className={`action-menu ${!collapsed && 'action-menu__open'}`}>\r\n        <MenuOutlined\r\n          onClick={() => {\r\n            onCollapse()\r\n          }}\r\n        />\r\n      </div> \r\n      <Menu theme=\"dark\" mode=\"inline\"  inlineCollapsed={collapsed} defaultSelectedKeys={['1']}>\r\n        {routes.map(route => (\r\n          !route.hidden && <Menu.Item \r\n            key={route.path}\r\n            onClick={()=>{history.push(route.path)}} \r\n            icon={<route.icon/>}\r\n          >{route.name}</Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { ReactNode, useEffect, useState } from 'react'\r\nimport Layout, { Header, Content} from 'antd/lib/layout/layout'\r\nimport Sidebar from 'components/Sidebar/Sidebar'\r\nimport { MenuOutlined } from '@ant-design/icons'\r\n\r\ninterface IAuthProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Auth({children}:IAuthProps) {\r\n  const [collapsed, setCollapsed] = useState(true)\r\n  const [isMobile, setISMobile] = useState(innerWidth < 768)\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setISMobile(innerWidth < 768)\r\n    window.addEventListener(\"resize\",handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n        <Sidebar \r\n          collapsed={collapsed}\r\n          onCollapse={() => {\r\n            setCollapsed(!collapsed)\r\n          }}\r\n        />\r\n        <Layout \r\n          style={{\r\n            marginLeft:isMobile ? 0 : 80,\r\n            filter: collapsed ? '' : 'brightness(0.5)'\r\n          }}\r\n          onClick={(e) => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            setCollapsed(true)\r\n          }}\r\n        >\r\n          <Header>\r\n            {collapsed &&\r\n            <MenuOutlined\r\n              className=\"action-menu__collapse-trigger\"\r\n              onClick={() => {\r\n                setCollapsed(!collapsed)\r\n              }}\r\n            />}\r\n          </Header>\r\n          <Content className=\"content-layput\">\r\n            {children}\r\n          </Content>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport {Button, Form, Input} from 'antd'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nfunction SignIn () {\r\n  const history = useHistory()\r\n\r\n  const onSubmit = () => {\r\n    history.push('/dashboard')\r\n  }\r\n\r\n  return (\r\n    <div className=\"signin\">\r\n      <div className=\"signin__card\">\r\n        <div className=\"signin__image\"/>\r\n        <div className=\"signin__form\">\r\n          <Form\r\n            layout='vertical'   \r\n            onFinish={onSubmit}     \r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n            >\r\n              <Input placeholder=\"E-mail\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n            >\r\n              <Input placeholder=\"Senha\" type=\"password\"/>\r\n              <Link className=\"signin__link\" to=\"/forgot-password\">Esqueci minha senha</Link>\r\n            </Form.Item>\r\n            <Form.Item className=\"signin__container-button\">\r\n              <Button className=\"signin__button\" htmlType=\"submit\">\r\n                Acessar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport routes from './routes'\r\nimport Auth from 'layouts/Auth'\r\nimport SignIn from 'views/SignIn/SignIn'\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={SignIn} exact={true}/>\r\n      <Auth>\r\n        {\r\n          routes.map((route) => (\r\n            <Route \r\n              key={route.path}\r\n              {...route}\r\n              exact={true}\r\n            />\r\n          ))\r\n        }\r\n      </Auth>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nconst store = configureStore({\r\n  reducer: { },\r\n})\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport { store }\r\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Routes from './routes/index'\nimport './styles/index.less'\n\nimport { Provider } from 'react-redux'\nimport { store } from 'store'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Routes/>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}